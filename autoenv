#!/usr/bin/env bash

_AUTOENVFILE=.environment
_AUTOENVCHECKSUMS=$HOME/.envsums

# can be used outside to see which environment is activated.
export AUTOENV=

_autoenv () {
    # If we did not change directory do nothing.
	if [[ $AUTOENV_LAST_PWD == "$PWD" ]]; then
        return
    fi
    AUTOENV_LAST_PWD=$PWD

    # We don't support activating multiple environments.
    if [[ -n $AUTOENV ]]; then
        return
    fi

    _activate_environment
}

_activate_environment () {
	local slashes current_dir envfile

	current_dir="$PWD"
	slashes=${current_dir//[^\/]/}

    # Bubble up to $HOME to find an .env file
	for (( n=${#slashes}; n>1; --n )); do
		if [ -f "${current_dir}/${_AUTOENVFILE}" ]; then

            envfile="$(readlink -e "${current_dir}/${_AUTOENVFILE}")"

            if _verify_envfile "$envfile" || _authorize_envfile "$envfile" ; then

                # cd to the directory because the env file might refer to
                # relative paths.
                pushd "$current_dir" &> /dev/null

                . $_AUTOENVFILE
                AUTOENV=$envfile

                popd &> /dev/null
            fi
            break;
		else
			current_dir="$current_dir/.."
		fi
	done
}

_verify_envfile () {
    touch "$_AUTOENVCHECKSUMS"
    sha256sum -c <(awk -v path="$1" '$2 == path' "$_AUTOENVCHECKSUMS") &> /dev/null
}

_authorize_envfile () {
	cat "$1"
	read -r -n 1 -p "Authorize envfile? y/n " answer
    echo  # for the new line

	if [ "${answer,,}" = "y" ]; then
        touch "$_AUTOENVCHECKSUMS"
        awk -v path="$1" '$2 != path' "$_AUTOENVCHECKSUMS" > tmp \
            && mv tmp "$_AUTOENVCHECKSUMS"
        sha256sum "$1" >> "$_AUTOENVCHECKSUMS"
		return 0
	fi
    return 1
}


_reactivate_environment () {
	_deactivate_environment
	# Force the activation to run again upon running the prompt command.
	AUTOENV_LAST_PWD=
}

_deactivate_environment () {
	AUTOENV=
    _deactivate 2> /dev/null
    unset -f _deactivate
}

_showenv () {
	if [ -f "$AUTOENV" ]; then
		cat "$AUTOENV"
		echo "$AUTOENV"
	else
		echo "No environment sourced or envfile has been moved or deleted."
	fi
}

_editenv () {
	if [ -f "$AUTOENV" ]; then
		$EDITOR "$AUTOENV"
	else
		echo "No environment sourced or envfile has been moved or deleted."
	fi
    _reactivate_environment
}

_init () {
	if [[ ! -f "$AUTOENV" && ! -f $_AUTOENVFILE ]]; then
        cat > $_AUTOENVFILE << 'EOF'
AUTOENV_PROMPT=

. .venv/bin/activate
export PYTHONPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )":$PYTHONPATH

_deactivate () {
    deactivate
    unset AUTOENV_PROMPT
}
EOF
        $EDITOR $_AUTOENVFILE
        _reactivate_environment
	fi
}

aue () {
    case $1 in
        a*) _activate_environment ;;
        d*) _deactivate_environment ;;
        r*) _reactivate_environment ;;
        s*) _showenv ;;
        e*) _editenv ;;
        i*) _init ;;
        *) echo "[USAGE] e activate|deactivate|reactivate|show|edit" ;;
    esac
}

_aue () {
    local options="activate deactivate reactivate show edit"
    local cur=${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=( $(compgen -W "$options" -- "$cur") )
}
complete -F _aue aue
