#!/usr/bin/python3

import sys
from subprocess import check_output

import i3ipc


def format_menu_item(container):
    fmt = '{ws.name}: {c.window_instance} - {c.name}'
    return fmt.format(ws=container.workspace(), c=container)


def call_dmenu(containers):
    items = sorted([
        format_menu_item(c) for c in containers
        if not c.workspace().name.startswith('_') and not c.focused
    ])

    cmd = ['dmenu', '-l', '10', '-i']
    menu_input = bytes(str.join('\n', items), 'UTF-8')
    pick = check_output(cmd, input=menu_input)
    return pick.strip().decode('UTF-8')


if __name__ == '__main__':
    containers = i3ipc.Connection().get_tree().leaves()

    if not containers:
        sys.exit()

    if len(containers) == 1:
        containers[0].command('focus')
    else:
        selection = call_dmenu(containers)
        pick = next(c for c in containers if format_menu_item(c) == selection)

        # If pick is on a workspace that is occupied by a fullscreen container
        # that is not the pick, toggle fullscreen mode.
        fullscreen = pick.workspace().find_fullscreen()
        if fullscreen and fullscreen[0] != pick:
            fullscreen[0].command('fullscreen toggle')

        pick.command('focus')
